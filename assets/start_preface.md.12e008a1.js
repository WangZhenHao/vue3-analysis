import{_ as a,c as e,o as s,N as t}from"./chunks/framework.7c29c9c7.js";const m=JSON.parse('{"title":"读源码需要的步骤","description":"","frontmatter":{},"headers":[],"relativePath":"start/preface.md"}'),n={name:"start/preface.md"},r=t(`<h1 id="读源码需要的步骤" tabindex="-1">读源码需要的步骤 <a class="header-anchor" href="#读源码需要的步骤" aria-label="Permalink to &quot;读源码需要的步骤&quot;">​</a></h1><h2 id="了解项目的构建" tabindex="-1">了解项目的构建 <a class="header-anchor" href="#了解项目的构建" aria-label="Permalink to &quot;了解项目的构建&quot;">​</a></h2><p>要读里面的源码，第一步就是想办法，把项目跑起来，运行开发模式。读懂项目里面的构建配置， 通用一句话就是你可以运行成功</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm run dev</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>你别看起来容易，实际上运行起来会遇到各种问题</p><ul><li>依赖包无法安装，或者安装出错</li><li>node，npm版本不兼容</li><li>根据配置代码，知道是如何打包出各种模块类型的bundle</li></ul><p>如果没有足够的好奇心，耐心，就会劝退一波人</p><h2 id="javascript的设计模式" tabindex="-1">javascript的设计模式 <a class="header-anchor" href="#javascript的设计模式" aria-label="Permalink to &quot;javascript的设计模式&quot;">​</a></h2><p>推荐一本很好的书《JavaScript设计模式与开发实践》。一些优秀的开源框架中，能够看到各种js写法， 一开始会觉懵圈，实际上是运用了各种设计模式。代码耦合度很低。</p><p>总的来说，读懂源码前，你得有一点js基础，掌握开发技巧</p><h2 id="带着疑问去看源码" tabindex="-1">带着疑问去看源码 <a class="header-anchor" href="#带着疑问去看源码" aria-label="Permalink to &quot;带着疑问去看源码&quot;">​</a></h2><p>一个开源项目这么庞大，成千上万行代码，一行一行去读，是不可能。我们可以先从某一个模块，某一个功能去debugger，去研究。比如我本人再看Vue3的时候，脑子先想到的是，<code>vue3的响应式原理是怎么实现</code>。debugger的时候，其他功能全部忽略掉，ts类型声明完全不需要关注，如何对template编译的，这些问题也可以完全忽略。 每一个模块都去这样子了解完之后，对Vue整体就有了更深的了解</p><h2 id="编写简单的案例" tabindex="-1">编写简单的案例 <a class="header-anchor" href="#编写简单的案例" aria-label="Permalink to &quot;编写简单的案例&quot;">​</a></h2><p>看完某一个功能之后，只是大致了解了该实现流程，我们就可以把该功能简单的实现一下，加深理解</p>`,14),l=[r];function o(p,i,c,d,h,u){return s(),e("div",null,l)}const b=a(n,[["render",o]]);export{m as __pageData,b as default};
